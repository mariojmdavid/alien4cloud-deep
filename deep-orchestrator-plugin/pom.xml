<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>es.upv</groupId>
	<artifactId>alien4cloud-indigodc-provider</artifactId>
	<version>1.0.4-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>alien4cloud-indigodc-provider</name>
	<url>http://maven.apache.org</url>

	<!--repositories> <repository> <id>fastconnect</id> <name>your custom repo</name> 
		<url>https://fastconnect.org/maven/content/repositories/opensource/</url> 
		</repository> </repositories -->

	<properties>
		<!-- Misc properties section -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.version>3.7.0</maven.compiler.version>
		<java.version>1.8</java.version>
		<provider.common.clientId>none</provider.common.clientId>
		<provider.common.clientSecret>none</provider.common.clientSecret>
		<provider.common.user>none</provider.common.user>
		<provider.common.password>none</provider.common.password>
		<coverage.threshold.percentage>0.7</coverage.threshold.percentage>
		<!--checkstyle.config.location>${basedir}/checkstyle_google.xml</checkstyle.config.location -->

		<!-- Libraries versions section -->
		<dep.ver.alien4cloud.core>2.0.0-UPV-1.0.0</dep.ver.alien4cloud.core>
		<dep.ver.jetty>9.4.9.v20180320</dep.ver.jetty>
		<dep.ver.snakeyaml>1.18</dep.ver.snakeyaml>
		<dep.ver.jetty.servlet>9.4.9.v20180320</dep.ver.jetty.servlet>
		<dep.ver.mockito>2.23.0</dep.ver.mockito>
		<dep.ver.powermock>1.7.4</dep.ver.powermock>
		<dep.ver.junit>5.3.1</dep.ver.junit>
		<dep.ver.commons-cli>1.4</dep.ver.commons-cli>
		<dep.ver.lombok>1.16.20</dep.ver.lombok>
		<dep.ver.apache.httpcomponents.httpclient>4.5.5</dep.ver.apache.httpcomponents.httpclient>
		<dep.ver.apache.httpcomponents.httpcore>4.4.9</dep.ver.apache.httpcomponents.httpcore>
		<dep.ver.jackson>2.8.0</dep.ver.jackson>
		<dep.ver.com.squareup.okio.okio>1.14.0</dep.ver.com.squareup.okio.okio>
		<dep.ver.junit.platform-surefire-provider>1.3.1</dep.ver.junit.platform-surefire-provider>

		<!-- Plugins versions section -->
		<dep.ver.plugin.surefire>2.22.1</dep.ver.plugin.surefire>
		<dep.ver.plugin.jacoco>0.8.2</dep.ver.plugin.jacoco>
		<dep.ver.plugin.failsafe>2.22.1</dep.ver.plugin.failsafe>
		<dep.ver.plugin.assembly>2.4.1</dep.ver.plugin.assembly>
		<dep.ver.plugin.javadoc>2.9</dep.ver.plugin.javadoc>
		<dep.ver.plugin.build-helper>1.5</dep.ver.plugin.build-helper>
		<dep.ver.plugin.jar>2.6</dep.ver.plugin.jar>
		<dep.ver.plugin.checkstyle>3.0.0</dep.ver.plugin.checkstyle>
		<dep.ver.plugin.com.puppycrawl.tools.checkstyle>8.14</dep.ver.plugin.com.puppycrawl.tools.checkstyle>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${dep.ver.mockito}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>${dep.ver.powermock}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>${dep.ver.powermock}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${dep.ver.jetty}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${dep.ver.jetty}</version>
		</dependency>

		<!--dependency> <groupId>alien4cloud</groupId> <artifactId>alien4cloud-core</artifactId> 
			<version>2.0.0</version> <scope>provided</scope> </dependency -->

		<dependency>
			<groupId>alien4cloud</groupId>
			<artifactId>alien4cloud-core</artifactId>
			<version>${dep.ver.alien4cloud.core}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${dep.ver.junit}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${dep.ver.commons-cli}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${dep.ver.lombok}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${dep.ver.apache.httpcomponents.httpclient}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>${dep.ver.apache.httpcomponents.httpcore}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${dep.ver.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${dep.ver.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${dep.ver.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-smile</artifactId>
			<version>${dep.ver.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${dep.ver.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>${dep.ver.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${dep.ver.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.squareup.okio</groupId>
			<artifactId>okio</artifactId>
			<version>${dep.ver.com.squareup.okio.okio}</version>
		</dependency>

		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${dep.ver.snakeyaml}</version>
		</dependency>

		<dependency>
			<groupId>com.puppycrawl.tools</groupId>
			<artifactId>checkstyle</artifactId>
			<version>8.11</version>
		</dependency>

	</dependencies>


	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/resources/META-INF</directory>
				<targetPath>META-INF</targetPath>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources/provider/</directory>
				<targetPath>provider</targetPath>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
				<includes>
					<include>**</include>
				</includes>
				<targetPath>ui</targetPath>
			</resource>

		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${dep.ver.plugin.checkstyle}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${dep.ver.plugin.com.puppycrawl.tools.checkstyle}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<logViolationsToConsole>true</logViolationsToConsole>
							<violationSeverity>warning</violationSeverity>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
							<!--configLocation>${basedir}/checkstyle_google.xml</configLocation-->
              <configLocation>google_checks.xml</configLocation>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${dep.ver.plugin.jacoco}</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-deep.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
            <id>check</id>            
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/coverage-reports/jacoco-deep.exec</dataFile>
              <!-- Add rules to fail the building process if the coverage is less 
                than threshold -->
              <rules>
                <rule implementation="org.jacoco.maven.RuleConfiguration">
                  <element>BUNDLE</element>
                  <limits>
                    <limit implementation="org.jacoco.report.check.Limit">
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${coverage.threshold.percentage}</minimum>
                    </limit>
                  </limits>
                </rule>
                
              </rules>
            </configuration>
          </execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-deep.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-deep</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${dep.ver.plugin.surefire}</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/none*.java</exclude>
					</excludes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>${dep.ver.junit.platform-surefire-provider}</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${dep.ver.junit}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${dep.ver.plugin.failsafe}</version>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${dep.ver.plugin.assembly}</version>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<attach>false</attach>
					<ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${dep.ver.plugin.javadoc}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--plugin> <groupId>external.atlassian.jgitflow</groupId> <artifactId>jgitflow-maven-plugin</artifactId> 
				<version>1.0-m5.1-alien</version> </plugin -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${dep.ver.plugin.build-helper}</version>
				<executions>
					<execution>
						<id>attach-distribution</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>target/${project.artifactId}-${project.version}.zip</file>
									<type>zip</type>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${dep.ver.plugin.jar}</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
